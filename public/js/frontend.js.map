{"version":3,"file":"/js/frontend.js","mappings":";;;;;;;;;;;;;AAAuB;AACG;;AAG1B;AACA;AACA;AACA;AACA;;AAEAE,MAAM,CAACD,KAAK,GAAGA,6CAAK;AAEpBC,MAAM,CAACD,KAAK,CAACE,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC,GAAG,gBAAgB;;AAG3E;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/BqB;;AAGrB;AACA;AACA;AACA;AACA;AACA,IAAMC,WAAW,GAAGC,mBAAO,CAAC,6DAAW,CAAC;AAExC,IAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;AAC7D,IAAMC,SAAS,GAAG,IAAIL,WAAW,CAACE,MAAM,CAAC;;AAEzC;AACAG,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,UAAUC,CAAC,EAAE;EACjC,IAAMC,YAAY,GAAGN,MAAM,CAACO,SAAS;;EAErC;EACA,IAAIP,MAAM,CAACO,SAAS,KAAK,SAAS,EAAE;IAChC;EACJ;;EAEA;EACAP,MAAM,CAACO,SAAS,GAAG,SAAS;;EAE5B;EACAC,UAAU,CAAC,YAAY;IACnBR,MAAM,CAACO,SAAS,GAAGD,YAAY;EACnC,CAAC,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC;;;;;;;;;;;AC7BF;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA","sources":["webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/frontend.js","webpack:///./resources/sass/backend.scss?de5e","webpack:///./resources/sass/frontend.scss","webpack:///./resources/css/main.css?02ea"],"sourcesContent":["import _ from 'lodash';\nimport axios from 'axios';\n\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// import Pusher from 'pusher-js';\n// window.Pusher = Pusher;\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","import './bootstrap';\n\n\n/**\n * Copy short url to clipboard\n *\n * https://github.com/zenorocha/clipboard.js\n */\nconst clipboardJs = require('clipboard');\n\nconst target = document.getElementById('clipboard_shortlink');\nconst clipboard = new clipboardJs(target);\n\n// Success action handler\nclipboard.on('success', function (e) {\n    const currentLabel = target.innerHTML;\n\n    // Exit label update when already in progress\n    if (target.innerHTML === 'Copied!') {\n        return;\n    }\n\n    // Update button label\n    target.innerHTML = 'Copied!';\n\n    // Revert button label after 3 seconds\n    setTimeout(function () {\n        target.innerHTML = currentLabel;\n    }, 3000)\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":["_","axios","window","defaults","headers","common","clipboardJs","require","target","document","getElementById","clipboard","on","e","currentLabel","innerHTML","setTimeout"],"sourceRoot":""}